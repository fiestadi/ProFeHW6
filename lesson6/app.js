
// //*****************TASK1 */
// // –ò—Å–ø–æ–ª—å–∑—É—è —Ä–µ—Å—É—Ä—Å json placeholder –ø–æ–ª—É—á–∏—Ç–µ –≤—Å–µ—Ö —é–∑–µ—Ä–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–æ–ª—å–∫–æ 
// // 1) username-—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
// // 2) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –∫–∞–∂–¥–æ–≥–æ –∏–∑ —é–∑–µ—Ä–æ–≤ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ: post_count
// // üëâüëâüëâ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —é–∑–µ—Ä–æ–≤: https://jsonplaceholder.typicode.com/users
// // üëâüëâüëâ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤: https://jsonplaceholder.typicode.com/posts

function getUsers() {
   fetch('https://jsonplaceholder.typicode.com/users')
      .then((response) => {
         return response.json();
      })
      .then((data) => {
         data.sort((a, b) => a.username ? 1 : -1);
         data.map((item) => {// map metod sortirovka
            console.log(item.username)
         });

      });
}
getUsers();
function getPostCount() {
   fetch("https://jsonplaceholder.typicode.com/posts")
      .then((response) => {
         return response.json();
      })
      .then((posts) => {
         let resultArray = [];
         posts.map((item) => {
            resultArray.push(item.userId);
         });
         let counts = {}
         resultArray.forEach(function (x) { counts[x] = (counts[x] || 0) + 1; });
         console.log("Post counts: ", counts);
      });
}

getPostCount();

// //********************task 2 */  
//  –í—ã–≤–µ–¥–∏—Ç–µ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —ç–∫—Ä–∞–Ω –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –∫–∞–∂–¥–æ–π –∏–∑ –¥–≤—É—Ö –∫–æ–ª–æ–Ω–æ–∫: 
// –∞) username (default sort by alphabetical) 
// b) post_count
// üëâüëâüëâ –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π, –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –Ω–∞–∑–≤–∞–Ω–∏—è —Å–∞–º–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ HTML –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–∫, —á—Ç–æ–±—ã –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ —á—Ç–æ –æ–Ω–∏ –∏–∑ —Å–µ–±—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç! 
let table = document.getElementById('tab');
let arr = [];



fetch('https://jsonplaceholder.typicode.com/users')
    .then(response => response.json())
    .then(json => {
        arr = json;
        sortData();
    });

function sortData() {
document.getElementById('tab_body').innerHTML = ' ';
arr.sort((a, b) => a.username.localeCompare(b.username));// metod localCompare () sravnivaet odnu stroku s druhoj pri sortirovke

  for (let i = 0; i < arr.length; i++) {
        let tr = '<tr>'; //sodaem stroku
        tr += '<td>' + arr[i].username + '</td>'; //dobavliaem stolb 1 v stroku
        tr += '<td>' + arr[i].post_count + '</td>'; // dobavliaem stolb 2 v stroku
        tr += '</td>'; //zakrivaem ctroku tablici
     document.getElementById('tab_body').innerHTML += tr;// dobovliaem 
     //stroku v dom

    };
   
}
sortData();

function sortAskName() {
    // sortiruem
    document.getElementById('sortAskName').style.display = 'none';
    document.getElementById('sortDeskName').style.display = 'inline-block';
    console.log('sortAskName')
    arr.sort((a, b) => a.username.localeCompare(b.username));
    // —Å–∫—Ä—ã—Ç—å —Ç–µ–∫—É—â–ø—é –∫–Ω–æ–ø–∫—É
    // –ø–æ–∫–∞–∑–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é –∫–Ω–æ–ø–∫—É
    sortData();
}
function sortDeskName() {
    // —Å–æ—Ä—Ç–∏—Ä—É–µ–º –≤ —ç—Ç–æ–º –º–µ—Å—Ç–µ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    document.getElementById('sortAskName').style.display = 'nline-block';
    document.getElementById('sortDeskName').style.display = 'none';
console.log('sortDeskName')
arr.sort((a, b) => b.username.localeCompare(a.username));
    sortData();
}
function sortAskPost() {
    document.getElementById('sortAskPost').style.display = 'none';
    document.getElementById('sortDeskPost').style.display
}

//********************* Task3/
//  –°–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç ID, City, Country –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ —Å—Å—ã–ª–∫–µ: https://random-data-api.com/api/address/random_address
// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∫–∞–∂–¥—ã–µ –ø–æ–ª—Ç–æ—Ä—ã —Å–µ–∫—É–Ω–¥—ã –ø—Ä–æ–≤–µ—Ä—è–µ—Ç - –µ—Å–ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ GET –∑–∞–ø—Ä–æ—Å –ø–æ–º–µ–Ω—è–ª—Å—è  ID, —Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é, —Ü–µ–ª—å –∫–æ—Ç–æ—Ä–æ–π –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –æ–±–Ω–æ–≤–∏—Ç—å HTML, –∞ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º.
// let currentID = null;
// function getRandomAdress() {
//    fetch('https://random-data-api.com/api/address/random_address')
//       .then((response) => {
//          return response.json();
//       })
//       .then((randomAdress) => {
//          if (currentID !== randomAdress.id) {
//             document.getElementById("id").innerText = randomAdress.id;
//             document.getElementById("country").innerText = randomAdress.country;
//             document.getElementById("city").innerText = randomAdress.city;

//          }
         
//          currentID = randomAdress.id;
//       })
// }
// setInterval(getRandomAdress, 1500);

//*********************Task 3.2 */
//  –í—ã–ø–æ–ª–Ω–∏—Ç–µ GET –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ—Å—É—Ä—Å: https://api.twitter.com/1.1/statuses/update.json
// –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏, –∞ –≤ —Å–ª—É—á–∞–µ –∏–º–µ–Ω–Ω–æ —ç—Ç–æ–π: –í–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—É—Å—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏ –∏ —Å–ª–æ–≤–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ?


// function getRequest() {
//    fetch('https://api.twitter.com/1.1/statuses/update.json')
//      .then(response => {
//        if (response.ok) {
//          return response.json();
//        } else {
//        new Error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ' + response.status);
//        }
//      })
//      .then(data => {
//        console.log('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', data);
//      })
//      .catch(error => {
//        if (error.message.includes('403')) {
//          console.log('–î–æ—Å—Ç—É–ø –∫ Twitter –∑–∞–ø—Ä–µ—â–µ–Ω.');
//        } else if (error.message.includes('404')) {
//          console.log('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.');
//        } else {
//          console.log('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error.message);
//        }
//      });
//  }
 
//  getRequest();